name: 🚀 Deploy
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
      - closed

permissions:
  actions: write
  pull-requests: write
  contents: read

jobs:
  development:
    name: 👷 Development
    uses: remix-austin/remixaustin-com/.github/workflows/development.yml@main

  log:
    name: 🪵 Log some helpful vars
    runs-on: ubuntu-latest
    needs: [development]
    steps:
      # Slashes in the ref_name will break Fly's Docker tags.
      - name: Replace slashes in ref_name
        id: replace_slashes_in_ref_name
        uses: frabert/replace-string-action@v2.4
        with:
          pattern: '(\d+)/merge'
          string: "${{ github.ref_name }}"
          replace-with: "$1-merge"
          flags: "g"

      - run: |
          echo "::group::Log some helpful vars"
          echo "🏷 ref = ${{ github.ref }}"
          echo "🏷 ref_name = ${{ github.ref_name }}"
          echo "🏷 clean ref_name = ${{ steps.replace_slashes_in_ref_name.outputs.replaced }}"
          echo "🏷 event_name = ${{ github.event_name }}"
          echo "🏷 event.number = ${{ github.event.number }}"
          echo "🏷 contains \"staging\" label = ${{ contains(github.event.pull_request.labels.*.name, 'staging') }}"
          echo "::endgroup:: "

  build:
    name: 🐳 Build
    # Only build/deploy on pushes to main, and when the "staging" label is added to a PR.
    if: >
      ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push')
      || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'staging') }}
    runs-on: ubuntu-latest
    needs: [log, development]
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      # Slashes in the ref_name will break Fly's Docker tags.
      - name: 🔄 Replace slashes in ref_name
        uses: frabert/replace-string-action@v2.4
        id: replace_slashes_in_ref_name
        with:
          pattern: '(\d+)/merge'
          string: "${{ github.ref_name }}"
          replace-with: "$1-merge"
          flags: "g"

      - name: 🐳 Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ steps.replace_slashes_in_ref_name.outputs.replaced }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [log, development, build]
    # Only build/deploy on pushes to main, and when the "staging" label is added to a PR.
    if: >
      ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push')
      || github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'staging') }}

    # Only run one deployment at a time per PR.
    concurrency:
      group: pr-${{ github.event.number }}

    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy-pr.outputs.url }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      # Will deploy an app called "pr-123-null-null" until this is fixed:
      # https://github.com/superfly/fly-pr-review-apps/pull/17
      - name: 🚀 Deploy PR
        id: deploy-pr
        uses: superfly/fly-pr-review-apps@1.0.0
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'staging') }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_REGION: dfw
          FLY_ORG: personal
        with:
          name: pr-${{ github.event.number }}
          url: ${{ steps.deploy-pr.outputs.url }}

      - name: 💬 Comment URL on PR
        uses: unsplash/comment-on-pr@master
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'staging') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ## 👀 View this PR on staging at:
            ${{ steps.deploy-pr.outputs.url }}
          check_for_duplicate_msg: true

      # - name: 🚀 Deploy Staging
      #   if: ${{ github.ref == 'refs/heads/dev' }}
      #   uses: superfly/flyctl-actions@1.3
      #   with:
      #     args: "deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🧼 Clean up GitHub environment after closing PR
        uses: strumwolf/delete-deployment-environment@v2.2.3
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
        with:
          # The provided token needs permission for admin write:org
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: pr-${{ github.event.number }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
